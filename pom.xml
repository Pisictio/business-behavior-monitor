<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.zzzzzzzs</groupId>
    <artifactId>business-behavior-monitor</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>business-behavior-monitor-sdk</module>
        <module>business-behavior-monitor-admin</module>
        <module>business-behavior-monitor-test</module>
    </modules>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.12</version>
        <relativePath/>
    </parent>

    <dependencyManagement>
        <dependencies>
            <!-- MySQL 数据库连接驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.22</version>
            </dependency>
            <!-- Google Guava 库，提供一系列实用的工具类和算法 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>32.1.3-jre</version>
            </dependency>
            <!-- Apache Commons Lang，提供一些扩展的 Java 核心语言功能 -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <!-- Apache Commons Codec，提供各种编码和解码的实现 -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>
            <!-- Alibaba 的 JSON 库，用于 JSON 的序列化和反序列化 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>2.0.49</version>
            </dependency>
            <!-- JUnit 测试框架，用于单元测试 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 定义构建的基本配置 -->
    <build>
        <!-- 定义最终生成的WAR文件名 -->
        <finalName>business-behavior-monitor</finalName>

        <!-- 配置项目的资源目录 -->
        <resources>
            <!-- 主要资源目录，其中的文件将被过滤处理 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <!-- 辅助资源目录，其中的文件不进行过滤处理 -->
            <resource>
                <directory>src/assembly/resources</directory>
                <filtering>false</filtering>
            </resource>
        </resources>

        <!-- 配置测试资源目录 -->
        <testResources>
            <!-- 测试用的主要资源目录，其中的文件将被过滤处理 -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <!-- 测试用的辅助资源目录，其中的文件也将被过滤处理 -->
            <testResource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <!-- 配置构建过程中使用的插件 -->
        <plugins>
            <!-- 编译插件，用于设置Java编译的源码和目标版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <!-- 设置源码版本 -->
                    <source>${java.version}</source>
                    <!-- 设置目标版本 -->
                    <target>${java.version}</target>
                    <!-- 设置编码格式 -->
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- 构建插件，用于创建项目的架构 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>

            <!-- 资源插件，用于处理资源文件的编码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <!-- 设置资源文件的编码格式 -->
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- 版本管理插件，用于管理依赖的版本信息 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </build>

</project>